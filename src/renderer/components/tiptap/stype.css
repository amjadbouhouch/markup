/**
    * Tiptap Editor
    */

.ProseMirror {
  @apply prose;
  /* min-height: 100px; */
}
.ProseMirror:focus-visible {
  outline: none;
}
.ProseMirror > * + * {
  margin-top: 0.75em;
}
.ProseMirror > *:first-child {
  margin-top: 0;
}
.ProseMirror > *:last-child {
  margin-bottom: 0;
}
.ProseMirror ul,
.ProseMirror ol {
  margin: 0.8em 0;
  padding: 0 0 0 2em;
}
.ProseMirror ul li > ul,
.ProseMirror ol li > ul,
.ProseMirror ul li > ol,
.ProseMirror ol li > ol {
  margin: 0;
}
.ProseMirror ul li p,
.ProseMirror ol li p {
  display: inline;
  margin: 0;
}
/* .ProseMirror ul[data-type='taskList'] {
  list-style: none;
  margin: 0.8em 0;
  padding: 0 0 0 0.9em;
}
.ProseMirror ul[data-type='taskList'] li {
  display: flex;
}
.ProseMirror ul[data-type='taskList'] li > label {
  flex: 0 0 auto;
  margin-right: 0.5em;
  user-select: none;
}
.ProseMirror ul[data-type='taskList'] li > div {
  flex: 1 1 auto;
}
.ProseMirror ul[data-type='taskList'] input[type='checkbox'] {
  cursor: pointer;
} */
.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3,
.ProseMirror h4,
.ProseMirror h5,
.ProseMirror h6 {
  line-height: 1.1;
}
.ProseMirror h1 {
  /* @apply text-2xl; */
}
.ProseMirror h2 {
  /* @apply text-xl; */
}
.ProseMirror p {
  margin: 0.8em 0;
}
.ProseMirror code {
  background: rgba(97, 97, 97, 0.1);
  color: #616161;
  border: 1px solid rgba(128, 128, 128, 0.3);
  border-radius: 3px;
  padding: 1px;
}
.ProseMirror pre {
  color: #24292e;
  background: #f5f7f9;
  font-family: 'ui-monospace', 'SFMono-Regular', 'SF Mono', Menlo, Consolas,
    'Liberation Mono', monospace;
  padding: 0.75rem 1rem;
  border-radius: 0.5rem;
}
.ProseMirror pre code {
  color: inherit;
  padding: 0;
  background: none;
  font-size: 0.8rem;
  border: none;
}
.ProseMirror blockquote {
  padding-left: 1rem;
  border-left: 2px solid rgba(13, 13, 13, 0.1);
}
.ProseMirror hr {
  border: none;
  border-top: 2px solid rgba(13, 13, 13, 0.1);
  margin: 1.5rem 0;
}
.ProseMirror span[data-mention] {
  background-color: #beecfd9a;
  box-decoration-break: clone;
  font-size: 0.9rem;
  font-weight: bold;
  border-radius: 4px;
  padding: 2px 4px;
  color: #56a7f8e0;
}
.ProseMirror span[data-mention] > .char {
  display: inline-block;
  vertical-align: top;
  margin: 1px 2px 0 0;
  color: #56a7f8e0;
}
.ProseMirror span[data-emoji-suggestion] > img,
.ProseMirror span[data-emoji-replacer] > img {
  width: 1.1em;
  height: 1.1em;
  margin: 0 0.05em;
  vertical-align: -0.25em;
}
.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: rgba(17, 17, 17, 0.3);
  pointer-events: none;
  height: 0;
  font-style: italic;
}
.ProseMirror .color {
  white-space: nowrap;
}
.ProseMirror .color::before {
  content: ' ';
  display: inline-block;
  width: 0.8em;
  height: 0.8em;
  border: 1px solid rgba(128, 128, 128, 0.3);
  vertical-align: middle;
  margin-right: 0.2em;
  margin-bottom: 0.15em;
  border-radius: 50%;
  background: var(--color);
  /*!
   Theme: GitHub
   Description: Light theme as seen on github.com
   Author: github.com
   Maintainer: @Hirse
   Updated: 2021-05-15
   Outdated base version: https://github.com/primer/github-syntax-light
   Current colors taken from GitHub's CSS
   */
}
.ProseMirror .hljs {
  color: #24292e;
  background: #ffffff;
}
.ProseMirror .hljs-doctag,
.ProseMirror .hljs-keyword,
.ProseMirror .hljs-meta .hljs-keyword,
.ProseMirror .hljs-template-tag,
.ProseMirror .hljs-template-variable,
.ProseMirror .hljs-type,
.ProseMirror .hljs-variable.language_ {
  /* prettylights-syntax-keyword */
  color: #d73a49;
}
.ProseMirror .hljs-title,
.ProseMirror .hljs-title.class_,
.ProseMirror .hljs-title.class_.inherited__,
.ProseMirror .hljs-title.function_ {
  /* prettylights-syntax-entity */
  color: #6f42c1;
}
.ProseMirror .hljs-attr,
.ProseMirror .hljs-attribute,
.ProseMirror .hljs-literal,
.ProseMirror .hljs-meta,
.ProseMirror .hljs-number,
.ProseMirror .hljs-operator,
.ProseMirror .hljs-variable,
.ProseMirror .hljs-selector-attr,
.ProseMirror .hljs-selector-class,
.ProseMirror .hljs-selector-id {
  /* prettylights-syntax-constant */
  color: #005cc5;
}
.ProseMirror .hljs-regexp,
.ProseMirror .hljs-string,
.ProseMirror .hljs-meta .hljs-string {
  /* prettylights-syntax-string */
  color: #032f62;
}
.ProseMirror .hljs-built_in,
.ProseMirror .hljs-symbol {
  /* prettylights-syntax-variable */
  color: #e36209;
}
.ProseMirror .hljs-comment,
.ProseMirror .hljs-code,
.ProseMirror .hljs-formula {
  /* prettylights-syntax-comment */
  color: #6a737d;
}
.ProseMirror .hljs-name,
.ProseMirror .hljs-quote,
.ProseMirror .hljs-selector-tag,
.ProseMirror .hljs-selector-pseudo {
  /* prettylights-syntax-entity-tag */
  color: #22863a;
}
.ProseMirror .hljs-subst {
  /* prettylights-syntax-storage-modifier-import */
  color: #24292e;
}
.ProseMirror .hljs-section {
  /* prettylights-syntax-markup-heading */
  color: #005cc5;
  font-weight: bold;
}
.ProseMirror .hljs-bullet {
  /* prettylights-syntax-markup-list */
  color: #735c0f;
}
.ProseMirror .hljs-emphasis {
  /* prettylights-syntax-markup-italic */
  color: #24292e;
  font-style: italic;
}
.ProseMirror .hljs-strong {
  /* prettylights-syntax-markup-bold */
  color: #24292e;
  font-weight: bold;
}
.ProseMirror .hljs-addition {
  /* prettylights-syntax-markup-inserted */
  color: #22863a;
  background-color: #f0fff4;
}
.ProseMirror .hljs-deletion {
  /* prettylights-syntax-markup-deleted */
  color: #b31d28;
  background-color: #ffeef0;
}
/* .ProseMirror .hljs-char.escape_, .ProseMirror .hljs-link, .ProseMirror .hljs-params, .ProseMirror .hljs-property, .ProseMirror .hljs-punctuation, .ProseMirror .hljs-tag {
} */
